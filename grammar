nonzero digit = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
digit = "0" | nonzero digit
integer = "0" | ["-"], (nonzero digit, {digit})
expression = term, {"+" | "-", term}
term = factor, {"*", "/", factor}
factor = integer

For each level of precedence define a non-terminal. The body of a production for the non-terminal should contain arithmetic operators from that level and non-terminals for the next higher level of precedence.
Create an additional non-terminal factor for basic units of expression, in our case, integers. The general rule is that if you have N levels of precedence, you will need N + 1 non-terminals in total: one non-terminal for each level plus one non-terminal for basic units of expression.

https://ruslanspivak.com/lsbasi-part5/
